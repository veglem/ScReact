{"version":3,"file":"diffs.js","names":["skip","kind","replace","newNode","update","attributes","childeren","remove","insert","node","isEqual","val1","val2","createDiff","exports","oldNode","value","component","instance","props","setProps","unmount","initProps","callback","e","notifyMounted","tagname","attUpdater","Object","keys","filter","att","indexOf","set","reduce","upd","_objectSpread","_defineProperty","childsUpdater","childsDiff","removeUntilkey","operations","elems","key","push","shift","insertUntilKey","oldChilds","newChilds","remainingOldChilds","map","c","remainingNewChilds","_ref","find","k","_ref2","_slicedToArray","nextUpdateKey","_ref3","_ref4","undefined"],"sources":["../src/lib/diffs.ts"],"sourcesContent":["import { VDOMAttributes, VDomNode } from \"./vdom\";\n\ntype AttributesUpdater = {\n    set: VDOMAttributes\n    remove: string[]\n}\n\ninterface InsertOperation {\n    kind: 'insert',\n    node: VDomNode\n}\n\ninterface UpdateOperation {\n    kind: 'update',\n    attributes: AttributesUpdater,\n    childeren: ChildUpdater[]\n}\n\ninterface ReplaceOperation {\n    kind: 'replace',\n    newNode: VDomNode\n    callback?: (elem: HTMLElement | Text) => void\n}\n\ninterface RemoveOperation {\n    kind: 'remove'\n}\n\ninterface SkipOperation {\n    kind: 'skip'\n}\n\nexport type VDomNodeUpdater =\n    | UpdateOperation\n    | ReplaceOperation\n    | SkipOperation\n\nexport type ChildUpdater =\n    | UpdateOperation\n    | ReplaceOperation\n    | RemoveOperation\n    | SkipOperation\n    | InsertOperation\n\nconst skip = (): SkipOperation => ({ kind: 'skip' })\n\nconst replace = (newNode: VDomNode): ReplaceOperation => ({ kind: 'replace', newNode })\n\nconst update = (attributes: AttributesUpdater, childeren: ChildUpdater[]): UpdateOperation => ({\n    kind: 'update',\n    attributes,\n    childeren\n})\n\nconst remove = (): RemoveOperation => ({ kind: 'remove' })\n\nconst insert = (node: VDomNode): InsertOperation => ({ kind: 'insert', node })\n\nconst isEqual = (val1: any, val2: any): boolean => {\n    return false\n}\n\nexport const createDiff = (oldNode: VDomNode, newNode: VDomNode): VDomNodeUpdater => {\n    // skip over text nodes with the same text\n    if (oldNode.kind == 'text' && newNode.kind == 'text' && oldNode.value == newNode.value) {\n        return skip()\n    }\n\n    // If a textnode is updated we need to replace it completly\n    if (oldNode.kind == 'text' || newNode.kind == 'text') {\n        return replace(newNode)\n    }\n\n    if(oldNode.kind == 'component' && newNode.kind == 'component' && oldNode.component == newNode.component && oldNode.instance) {\n        newNode.instance = oldNode.instance\n        if(isEqual(oldNode.props, newNode.props)) return skip()\n        return newNode.instance.setProps(newNode.props)\n    }\n\n    if(oldNode.kind == 'component') {\n        oldNode.instance.unmount()\n        oldNode.instance = null\n        return replace(newNode)\n    }\n\n    // replace with different component\n    if(newNode.kind == 'component') {\n        newNode.instance = new newNode.component()\n        return {\n            kind: 'replace',\n            newNode: newNode.instance.initProps(newNode.props),\n            callback: e => newNode.instance.notifyMounted(e)\n        }\n    }\n\n    // If the tagname of a node is changed we have to replace it completly\n    if (oldNode.tagname != newNode.tagname) {\n        return replace(newNode)\n    }\n\n    // get the updated and replaces attributes\n    const attUpdater: AttributesUpdater = {\n        remove: Object.keys(oldNode.props || {})\n            .filter(att => Object.keys(newNode).indexOf(att) == -1),\n        set: Object.keys(newNode.props || {})\n            .filter(att => oldNode.props[att] != newNode.props[att])\n            .reduce((upd, att) => ({ ...upd, [att]: newNode.props[att] }), {})\n    }\n\n    const childsUpdater: ChildUpdater[] = childsDiff((oldNode.childeren || []), (newNode.childeren || []))\n\n    return update(attUpdater, childsUpdater)\n}\n\nconst removeUntilkey = (operations: ChildUpdater[], elems: [string | number, VDomNode][], key: string | number) => {\n    while(elems[0] && elems[0][0] != key) {\n        if(elems[0][1].kind == 'component') {\n            elems[0][1].instance.unmount()\n            elems[0][1].instance = null\n        }\n        operations.push(remove())\n        elems.shift()\n    }\n}\n\nconst insertUntilKey = (operations: ChildUpdater[], elems: [string | number, VDomNode][], key: string | number) => {\n    while(elems[0] && elems[0][0] != key) {\n        operations.push(insert(elems.shift()[1]))\n    }\n}\n\nconst childsDiff = (oldChilds: VDomNode[], newChilds: VDomNode[]): ChildUpdater[] => {\n    const remainingOldChilds: [string | number, VDomNode][] = oldChilds.map(c => [c.key, c])\n    const remainingNewChilds: [string | number, VDomNode][] = newChilds.map(c => [c.key, c])\n\n    const operations: ChildUpdater[] = []\n\n    // find the first element that got updated\n    let [ nextUpdateKey ] = remainingOldChilds.find(k => remainingNewChilds.map(k => k[0]).indexOf(k[0]) != -1) || [null]\n\n    while(nextUpdateKey) {\n\n        // first remove all old childs before the update\n        removeUntilkey(operations, remainingOldChilds, nextUpdateKey)\n\n        // then insert all new childs before the update\n        insertUntilKey(operations, remainingNewChilds, nextUpdateKey)\n\n        // create the update\n        operations.push(createDiff(remainingOldChilds.shift()[1], remainingNewChilds.shift()[1]))\n\n        // find the next update\n        ; [ nextUpdateKey ] = remainingOldChilds.find(k => remainingNewChilds.map(k => k[0]).indexOf(k[0]) != -1) || [null]\n    }\n\n    // remove all remaing old childs after the last update\n    removeUntilkey(operations, remainingOldChilds, undefined)\n\n    // insert all remaing new childs after the last update\n    insertUntilKey(operations, remainingNewChilds, undefined)\n\n    return operations\n}"],"mappings":"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","ignoreList":[]}